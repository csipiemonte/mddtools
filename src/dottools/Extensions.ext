import dot;

extension dottools::GenExtensions reexport;

/*
 * This extension file is intended to be used for defining
 * general extensions for the domain model.
 * It inherits generated extensions from GenExtensions.
 * You can overwrite or spezialize them here
 */
 
String ERRMSG_REQUIREDFEATURE (String feature) : feature.metaType.name + " feature "+feature+" must be set";


Void setType(DotGraph gr, GraphType tp) : JAVA
	it.csi.mddtools.dottools.MiscUtils.setGraphType(org.eclipse.gef4.internal.dot.parser.dot.DotGraph, org.eclipse.gef4.internal.dot.parser.dot.GraphType);

/*
GraphType getGraphType(MainGraph gr) : JAVA
	it.csi.mddtools.dottools.MiscUtils.getGraphType(org.eclipse.zest.internal.dot.parser.dot.MainGraph);


Void setOp(EdgeRhsNode node, String op) : JAVA
	it.csi.mddtools.dottools.MiscUtils.setOp(org.eclipse.zest.internal.dot.parser.dot.EdgeRhsNode, java.lang.String);

Void setNode(dot::EdgeRhsNode node, dot::NodeId nid) : JAVA
	it.csi.mddtools.dottools.MiscUtils.setNodeId(org.eclipse.zest.internal.dot.parser.dot.EdgeRhsNode, org.eclipse.zest.internal.dot.parser.dot.NodeId);

NodeId getNode(dot::EdgeRhsNode node) : JAVA
	it.csi.mddtools.dottools.MiscUtils.getNodeId(org.eclipse.zest.internal.dot.parser.dot.EdgeRhsNode);
	
Void setNode_id(dot::EdgeStmtNode node, dot::NodeId nid) : JAVA
	it.csi.mddtools.dottools.MiscUtils.setNodeId(org.eclipse.zest.internal.dot.parser.dot.EdgeStmtNode, org.eclipse.zest.internal.dot.parser.dot.NodeId);

NodeId getNode_id(dot::EdgeStmtNode node) : JAVA
	it.csi.mddtools.dottools.MiscUtils.getNodeId(org.eclipse.zest.internal.dot.parser.dot.EdgeStmtNode);
	*/